[{"/Users/rodrigo/Desktop/Javier/Proyectos/Web/coursera/React/confusion/src/App.js":"1","/Users/rodrigo/Desktop/Javier/Proyectos/Web/coursera/React/confusion/src/reportWebVitals.js":"2","/Users/rodrigo/Desktop/Javier/Proyectos/Web/coursera/React/confusion/src/index.js":"3","/Users/rodrigo/Desktop/Javier/Proyectos/Web/coursera/React/confusion/src/components/MenuComponent.js":"4","/Users/rodrigo/Desktop/Javier/Proyectos/Web/coursera/React/confusion/src/components/DishdetailComponent.js":"5","/Users/rodrigo/Desktop/Javier/Proyectos/Web/coursera/React/confusion/src/components/MainComponent.js":"6","/Users/rodrigo/Desktop/Javier/Proyectos/Web/coursera/React/confusion/src/components/HomeComponent.js":"7","/Users/rodrigo/Desktop/Javier/Proyectos/Web/coursera/React/confusion/src/components/HeaderComponent.js":"8","/Users/rodrigo/Desktop/Javier/Proyectos/Web/coursera/React/confusion/src/components/FooterComponent.js":"9","/Users/rodrigo/Desktop/Javier/Proyectos/Web/coursera/React/confusion/src/components/AboutComponent.js":"10","/Users/rodrigo/Desktop/Javier/Proyectos/Web/coursera/React/confusion/src/components/ContactComponent.js":"11","/Users/rodrigo/Desktop/Javier/Proyectos/Web/coursera/React/confusion/src/shared/promotions.js":"12","/Users/rodrigo/Desktop/Javier/Proyectos/Web/coursera/React/confusion/src/shared/comments.js":"13"},{"size":358,"mtime":1610217863225,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1609844919362,"results":"16","hashOfConfig":"15"},{"size":547,"mtime":1609932077760,"results":"17","hashOfConfig":"15"},{"size":1527,"mtime":1610306166165,"results":"18","hashOfConfig":"15"},{"size":2656,"mtime":1610307555145,"results":"19","hashOfConfig":"15"},{"size":905,"mtime":1610194269261,"results":"20","hashOfConfig":"15"},{"size":1118,"mtime":1610300968233,"results":"21","hashOfConfig":"15"},{"size":4990,"mtime":1611569012654,"results":"22","hashOfConfig":"15"},{"size":2769,"mtime":1610218908823,"results":"23","hashOfConfig":"15"},{"size":4263,"mtime":1610309550261,"results":"24","hashOfConfig":"15"},{"size":10732,"mtime":1611566663871,"results":"25","hashOfConfig":"15"},{"size":435,"mtime":1610294328075,"results":"26","hashOfConfig":"15"},{"size":4118,"mtime":1610294418444,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vhwwjy",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rodrigo/Desktop/Javier/Proyectos/Web/coursera/React/confusion/src/App.js",[],"/Users/rodrigo/Desktop/Javier/Proyectos/Web/coursera/React/confusion/src/reportWebVitals.js",[],["58","59"],"/Users/rodrigo/Desktop/Javier/Proyectos/Web/coursera/React/confusion/src/index.js",[],["60","61"],"/Users/rodrigo/Desktop/Javier/Proyectos/Web/coursera/React/confusion/src/components/MenuComponent.js",[],"/Users/rodrigo/Desktop/Javier/Proyectos/Web/coursera/React/confusion/src/components/DishdetailComponent.js",[],"/Users/rodrigo/Desktop/Javier/Proyectos/Web/coursera/React/confusion/src/components/MainComponent.js",[],"/Users/rodrigo/Desktop/Javier/Proyectos/Web/coursera/React/confusion/src/components/HomeComponent.js",[],["62","63"],"/Users/rodrigo/Desktop/Javier/Proyectos/Web/coursera/React/confusion/src/components/HeaderComponent.js",[],"/Users/rodrigo/Desktop/Javier/Proyectos/Web/coursera/React/confusion/src/components/FooterComponent.js",[],"/Users/rodrigo/Desktop/Javier/Proyectos/Web/coursera/React/confusion/src/components/AboutComponent.js",[],"/Users/rodrigo/Desktop/Javier/Proyectos/Web/coursera/React/confusion/src/components/ContactComponent.js",["64","65"],"import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, Row, FormFeedback } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nclass Contact extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            firstname: '',\n            lastname: '',\n            telnum: '',\n            email: '',\n            agree: false,\n            contactType: 'Tel.',\n            message: '',\n            touched: {\n                firstname: false,\n                lastname: false,\n                telnum: false,\n                email: false\n            }\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleBlur = this.handleBlur.bind(this);\n    }\n\n    handleInputChange(event){\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleSubmit(event){\n        console.log('Current State is: ' + JSON.stringify(this.state));\n        alert('Current State is: ' + JSON.stringify(this.state))\n        event.preventDefault();\n    }\n\n    handleBlur = (field) => (evt) => {\n        this.setState({\n            touched: { ...this.state.touched, [field]: true}\n        });\n    }\n\n    validate(firstname, lastname, telnum, email){\n        const errors = {\n            firstname: '',\n            lastname: '',\n            telnum: '',\n            email: ''\n        };\n\n        if (this.state.touched.firstname && firstname.length < 3){\n            errors.firstname = 'First Name should be >= 3 characters';\n        }else if (this.state.touched.firstname && firstname.length > 10){\n            errors.firstname = 'First Name should be <= 10 characters';\n        }\n\n        if (this.state.touched.lastname && lastname.length < 3){\n            errors.lastname = 'Last Name should be >= 3 characters';\n        }else if (this.state.touched.lastname && lastname.length > 10){\n            errors.lastname = 'Last Name should be <= 10 characters';\n        }\n\n        const reg = /^\\d+$/;\n        if(this.state.touched.telnum && !reg.test(telnum)){\n            errors.telnum = 'Tel. Number should contain only numbers';\n        }\n\n        if(this.state.touched.email && email.split('').filter(x => x === '@').length !== 1){\n            errors.email = 'Email should contain a @';\n        }\n\n        return errors;\n    }\n\n    render(){\n        const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email);\n\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                    <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                            <h5>Our Address</h5>\n                            <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                            </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send us your Feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <Form onSubmit={this.handleSubmit}>\n                            <FormGroup row>\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Input type=\"text\" id=\"firstname\" name=\"firstname\"\n                                    placeholder=\"First Name\"\n                                    value={this.state.firstname}\n                                    valid={errors.firstname === ''}\n                                    invalid={errors.firstname !== ''}\n                                    onBlur={this.handleBlur('firstname')}\n                                    onChange={this.handleInputChange} />\n                                    <FormFeedback>{errors.firstname}</FormFeedback>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Input type=\"text\" id=\"lastname\" name=\"lastname\"\n                                    placeholder=\"Last Name\"\n                                    value={this.state.lastname}\n                                    valid={errors.lastname === ''}\n                                    invalid={errors.lastname !== ''}\n                                    onBlur={this.handleBlur('lastname')}\n                                    onChange={this.handleInputChange} />\n                                    <FormFeedback>{errors.lastname}</FormFeedback>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Input type=\"text\" id=\"telnum\" name=\"telnum\"\n                                    placeholder=\"Tel. number\"\n                                    value={this.state.telnum}\n                                    valid={errors.telnum === ''}\n                                    invalid={errors.telnum !== ''}\n                                    onBlur={this.handleBlur('telnum')}\n                                    onChange={this.handleInputChange} />\n                                    <FormFeedback>{errors.telnum}</FormFeedback>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Input type=\"text\" id=\"email\" name=\"email\"\n                                    placeholder=\"Email\"\n                                    value={this.state.email}\n                                    valid={errors.email === ''}\n                                    invalid={errors.email !== ''}\n                                    onBlur={this.handleBlur('email')}\n                                    onChange={this.handleInputChange} />\n                                    <FormFeedback>{errors.email}</FormFeedback>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Col md={{size: 6, offset: 2}}>\n                                    <FormGroup check>\n                                        <Label check>\n                                            <Input type=\"checkbox\"\n                                                name=\"agree\"\n                                                checked={this.state.agree}\n                                                onChange={this.handleInputChange} /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </FormGroup>\n                                </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                    <Input type=\"select\" name=\"contactType\"\n                                        value={this.state.contactType}\n                                        onChange={this.handleInputChange}>\n                                            <option>Tel.</option>\n                                            <option>Email</option>\n                                    </Input>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Input type=\"textarea\" id=\"message\" name=\"message\"\n                                        rows=\"12\"\n                                        value={this.state.message}\n                                        onChange={this.handleInputChange}>\n                                    </Input>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </FormGroup>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","/Users/rodrigo/Desktop/Javier/Proyectos/Web/coursera/React/confusion/src/shared/promotions.js",[],"/Users/rodrigo/Desktop/Javier/Proyectos/Web/coursera/React/confusion/src/shared/comments.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"66","replacedBy":"70"},{"ruleId":"68","replacedBy":"71"},{"ruleId":"66","replacedBy":"72"},{"ruleId":"68","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":2,"column":82,"nodeType":"76","messageId":"77","endLine":2,"endColumn":85},{"ruleId":"78","severity":1,"message":"79","line":120,"column":29,"nodeType":"80","endLine":120,"endColumn":71},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],["81"],["82"],["81"],["82"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]